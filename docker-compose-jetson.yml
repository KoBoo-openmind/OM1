# version: '3.8'

services:
  om1:
    # build:
    #   context: .
    #   dockerfile: Dockerfile.jetson
    image: openmindagi/om1:${OM1_TAG}
    platform: linux/arm64
    container_name: om1
    restart: unless-stopped
    network_mode: host
    shm_size: "1g"
    environment:
      - UV_PYTHON=/usr/bin/python3.10
      - XDG_RUNTIME_DIR=${XDG_RUNTIME_DIR:-/run/user/1000}
      - ROS_DOMAIN_ID=0
      - CYCLONEDDS_HOME=/app/cyclonedds/install
      - CYCLONEDDS_URI=file:///cyclonedds/cyclonedds.xml
      - CMAKE_PREFIX_PATH=/app/cyclonedds/install
      - OM_API_KEY=${OM_API_KEY}
      # This overwrite image's correct PATH which included CUDA + venv, don't include it
      # - VIRTUAL_ENV=/app/OM1/.venv
      # misleading uv to recreate venv (potentially switching to python3.12 wiping python3.10)
      # - PATH=/app/OM1/.venv/bin:$PATH
      - PULSE_SERVER=unix:${XDG_RUNTIME_DIR}/pulse/native
      - ALSA_CARD=0
    volumes:
      # - ./.venv:/app/OM1/.venv
      - ./cyclonedx:/cyclonedx
      - /dev/snd:/dev/snd:rw
      - ${XDG_RUNTIME_DIR}/pulse:${XDG_RUNTIME_DIR}/pulse:rw
      - /usr/share/alsa:/usr/share/alsa:ro
      - /etc/asound.conf:/etc/asound.conf:ro
      - /tmp/argus_socket:/tmp/argus_socket
    devices:
      - /dev/snd:/dev/snd
      - /dev/video0:/dev/video0
    runtime: nvidia
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    cap_add:
      - SYS_PTRACE
      - NET_ADMIN
    security_opt:
      - apparmor:unconfined
    group_add:
      - audio
    # command: ["spot"]
  

### USAGE:
# docker compose -f docker-compose-jetson.yml stop om1
# docker compose -f docker-compose-jetson.yml pull
# docker compose -f docker-compose-jetson.yml run --rm -it --entrypoint bash om1
