version: '3.8'

services:
  ros1_gazebo:
    build:
      context: ./gazebo_ros/docker/
      dockerfile: Dockerfile
    image: ros1_gazebo_image:latest
    platform: linux/amd64
    container_name: ros1_gazebo_container
    runtime: ${DOCKER_RUNTIME:-runc}
    network_mode: host
    pid: host
    ipc: host
    # environment:
    #   # Display configuration
    #   - DISPLAY=${DISPLAY:-:0}
    #   # NVIDIA settings
    #   - NVIDIA_VISIBLE_DEVICES=all
    #   - NVIDIA_DRIVER_CAPABILITIES=all
    #   # GLX configuration for NVIDIA
    #   - __GLX_VENDOR_LIBRARY_NAME=nvidia
    #   - __NV_PRIME_RENDER_OFFLOAD=1
    #   # Qt settings
    #   - QT_X11_NO_MITSHM=1
    # environment:
    #   - DISPLAY=${DISPLAY:-:0}
    #   - NVIDIA_VISIBLE_DEVICES=${NVIDIA_VISIBLE_DEVICES:-all}
    #   - NVIDIA_DRIVER_CAPABILITIES=${NVIDIA_DRIVER_CAPABILITIES:-all}
    #   - QT_X11_NO_MITSHM=1
    #   - FORCE_SOFTWARE_RENDERING=${FORCE_SOFTWARE_RENDERING:-false}
    environment:
      # Display configuration
      - DISPLAY=${DISPLAY:-:0}
      # NVIDIA settings
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
      # Pass GPU detection from host
      - USE_GPU_RENDERING=${USE_GPU_RENDERING:-false}
      # GLX configuration - will be set based on detection
      - __GLX_VENDOR_LIBRARY_NAME=${__GLX_VENDOR_LIBRARY_NAME:-mesa}
      - __NV_PRIME_RENDER_OFFLOAD=${__NV_PRIME_RENDER_OFFLOAD:-0}
      # Qt settings
      - QT_X11_NO_MITSHM=1
    volumes:
      # X11 socket for GUI forwarding
      - /tmp/.X11-unix:/tmp/.X11-unix
      # Bind GPU device interface
      - /dev/dri:/dev/dri:rw
      # Shared workspace with optimized volume mode
      # - /home/shaohong/Desktop/dog/exp/unitree_simulation/simulation/gazebo_ros/:/workspace/:delegated
    # gpus:
    #   - device=all
    tty: true
    stdin_open: true
    privileged: true
    restart: always


  ros1_ros2_bridge:
    build:
      context: ./ros_bridge/docker/
      dockerfile: Dockerfile
    image: ros-humble-ros1-bridge-builder:latest
    container_name: ros1_ros2_bridge
    privileged: true
    network_mode: host
    pid: host
    ipc: host
    environment:
      - DISPLAY=${DISPLAY}
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:cached
      - /dev/dri:/dev/dri:cached
      # - /home/shaohong/Desktop/dog/exp/unitree_simulation/simulation/ros_bridge/:/workspace/
    tty: true
    stdin_open: true
    restart: always
